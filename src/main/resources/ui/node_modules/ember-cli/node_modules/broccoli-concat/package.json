{
  "name": "broccoli-concat",
  "version": "2.3.8",
  "description": "Fast, good-enough concatenation with source maps.",
  "main": "index.js",
  "files": [
    "index.js",
    "concat.js",
    "concat-without-source-maps.js"
  ],
  "scripts": {
    "test": "mocha",
    "test:debug": "mocha --no-timeouts debug"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ef4/broccoli-sourcemap-concat"
  },
  "author": {
    "name": "Edward Faulkner",
    "email": "ef@alum.mit.edu"
  },
  "license": "MIT",
  "keywords": [
    "broccoli-plugin"
  ],
  "devDependencies": {
    "broccoli": "^0.16.9",
    "broccoli-merge-trees": "^1.1.1",
    "chai": "^3.5.0",
    "chai-as-promised": "^5.3.0",
    "chai-files": "^1.2.0",
    "fs-extra": "^0.30.0",
    "mocha": "^3.0.0",
    "quick-temp": "^0.1.3",
    "walk-sync": "^0.3.1"
  },
  "dependencies": {
    "broccoli-caching-writer": "^2.3.1",
    "broccoli-kitchen-sink-helpers": "^0.3.1",
    "broccoli-stew": "^1.3.3",
    "fast-sourcemap-concat": "^1.0.1",
    "fs-extra": "^0.30.0",
    "lodash.merge": "^4.3.0",
    "lodash.omit": "^4.1.0",
    "lodash.uniq": "^4.2.0"
  },
  "readme": "Broccoli concatenator that generates & propagates sourcemaps\n-------------------------------------------------\n\n[![Build Status](https://travis-ci.org/ef4/broccoli-sourcemap-concat.svg?branch=master)](https://travis-ci.org/ef4/broccoli-sourcemap-concat)\n[![Build status](https://ci.appveyor.com/api/projects/status/bpxeh0we50eod6xw/branch/master?svg=true)](https://ci.appveyor.com/project/embercli/broccoli-sourcemap-concat/branch/master)\n\nThis filter is designed to be fast & good enough. It can generates\nsource maps substantially faster than you'll get via\nmozilla/source-map, because it's special-cased for straight\nline-to-line contenation.\n\nIt discovers input sourcemaps in relative URLs, including data URIs.\n\n\n### Usage\n\n```js\nvar node = concat(node);\n```\n\n#### Advanced Usage\n\n```js\nvar node = concat(node, {\n  outputFile: '/output.js',\n  header: \";(function() {\",\n  headerFiles: ['loader.js'],\n  inputFiles: ['**/*']\n  footerFiles: ['auto-start.js'],\n  footer: \"}());\",\n  sourceMapConfig: { enabled: true },\n  allowNone: false | true // defaults to false, and will error if trying to concat but no files are found.\n});\n```\n\nThe structure of `output.js` will be as follows:\n\n```\n// - header\n// - ordered content of the files in headerFiles\n// - un-ordered content of files matched by inputFiles, but not in headerFiles or footerFiles\n// - ordered content of the files in footerFiles\n// - footer\n```\n\n#### Debug Usage\n\nSetting the environment variable `CONCAT_STATS=true` will result a summary of\neach concatention being output to `process.cwd() + 'concat-stats-for/*.json'`\n\nEach file within that directory represents a different contenation, and will contain:\n\n* outputFile – the output file that was created\n* sizes – a summary of each input file, and the associated pre-minified pre-gziped byte size.\n\n##### Example:\n\nconcat-stats-for/<id>-file.json\n```json\n{\n  \"outputFile\": \"path/to/output/File\",\n  \"sizes\": {\n    \"a.js\": 5,\n    \"b.js\": 10,\n  }\n}\n```\n\nother files:\n\n* concat-stats-for/<id>-file/a.js\n* concat-stats-for/<id>-file/b.js\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ef4/broccoli-sourcemap-concat/issues"
  },
  "homepage": "https://github.com/ef4/broccoli-sourcemap-concat",
  "_id": "broccoli-concat@2.3.8",
  "_shasum": "590cdcc021bb905b6c121d87c2d1d57df44a2a48",
  "_from": "broccoli-concat@^2.0.4",
  "_resolved": "https://registry.npmjs.org/broccoli-concat/-/broccoli-concat-2.3.8.tgz"
}
